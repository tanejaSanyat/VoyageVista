{"ast":null,"code":"var _jsxFileName = \"/Users/sanyattaneja/Downloads/VoyageVista-main/src/components/Context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../../firebase/firebase.config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Make useAuth\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst googleProvider = new GoogleAuthProvider();\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  // sign up using email password\n  const signUp = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  // User Logout\n  const logout = () => {\n    return auth.signOut();\n  };\n\n  // User login using email password\n  const login = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  // google SignUp\n  const googleSignUp = () => {\n    return auth.signInWithPopup(googleProvider);\n  };\n\n  // forget Password\n  const forgetPassword = email => {\n    return auth.sendPasswordResetEmail(email);\n  };\n\n  // Get Current Login user\n  useEffect(() => {\n    const unSubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unSubscribe;\n  }, []);\n\n  // Context values\n  const value = {\n    signUp,\n    currentUser,\n    logout,\n    login,\n    googleSignUp,\n    forgetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["GoogleAuthProvider","React","createContext","useContext","useEffect","useState","auth","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","googleProvider","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","signUp","email","password","createUserWithEmailAndPassword","logout","signOut","login","signInWithEmailAndPassword","googleSignUp","signInWithPopup","forgetPassword","sendPasswordResetEmail","unSubscribe","onAuthStateChanged","user","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sanyattaneja/Downloads/VoyageVista-main/src/components/Context/AuthContext.jsx"],"sourcesContent":["import { GoogleAuthProvider } from \"firebase/auth\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../../firebase/firebase.config\";\nconst AuthContext = createContext();\n\n// Make useAuth\nexport const useAuth = () => useContext(AuthContext);\n\n// Provider\nconst googleProvider = new GoogleAuthProvider();\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  // sign up using email password\n  const signUp = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  // User Logout\n  const logout = () => {\n    return auth.signOut();\n  };\n\n  // User login using email password\n  const login = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  // google SignUp\n  const googleSignUp = () => {\n    return auth.signInWithPopup(googleProvider);\n  };\n\n  // forget Password\n  const forgetPassword = (email) => {\n    return auth.sendPasswordResetEmail(email);\n  };\n\n  // Get Current Login user\n  useEffect(() => {\n    const unSubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unSubscribe;\n  }, []);\n\n  // Context values\n  const value = {\n    signUp,\n    currentUser,\n    logout,\n    login,\n    googleSignUp,\n    forgetPassword,\n  };\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":";;;AAAA,SAASA,kBAAkB,QAAQ,eAAe;AAClD,OAAOC,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,IAAI,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtD,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,MAAME,cAAc,GAAG,IAAIZ,kBAAkB,CAAC,CAAC;AAE/C,MAAMa,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMe,MAAM,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAClC,OAAOhB,IAAI,CAACiB,8BAA8B,CAACF,KAAK,EAAEC,QAAQ,CAAC;EAC7D,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnB,OAAOlB,IAAI,CAACmB,OAAO,CAAC,CAAC;EACvB,CAAC;;EAED;EACA,MAAMC,KAAK,GAAGA,CAACL,KAAK,EAAEC,QAAQ,KAAK;IACjC,OAAOhB,IAAI,CAACqB,0BAA0B,CAACN,KAAK,EAAEC,QAAQ,CAAC;EACzD,CAAC;;EAED;EACA,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOtB,IAAI,CAACuB,eAAe,CAACjB,cAAc,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMkB,cAAc,GAAIT,KAAK,IAAK;IAChC,OAAOf,IAAI,CAACyB,sBAAsB,CAACV,KAAK,CAAC;EAC3C,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACd,MAAM4B,WAAW,GAAG1B,IAAI,CAAC2B,kBAAkB,CAAEC,IAAI,IAAK;MACpDjB,cAAc,CAACiB,IAAI,CAAC;MACpBf,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IACF,OAAOa,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,KAAK,GAAG;IACZf,MAAM;IACNJ,WAAW;IACXQ,MAAM;IACNE,KAAK;IACLE,YAAY;IACZE;EACF,CAAC;EACD,oBACEtB,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAACzB,GAAA,CApDIF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAsDlB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}